version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ai_web_agency_postgres
    environment:
      POSTGRES_DB: ai_web_agency
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ai_web_agency_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  api:
    build: .
    container_name: ai_web_agency_api
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/ai_web_agency
      - REDIS_URL=redis://redis:6379
      - SUPABASE_URL=https://xxzieezklzehlhizphkj.supabase.co
      - SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      - STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key_here
      - STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret_here
      - PERPLEXITY_API_KEY=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
      - SECRET_KEY=your-secret-key-here
      - DEBUG=True
      - CORS_ORIGINS=["http://localhost:3000", "http://localhost:8000"]
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data: 